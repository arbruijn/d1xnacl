#! -*- python -*-
#
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import make_nacl_env
import nacl_utils
import os

Repository("../..")

nacl_env = make_nacl_env.NaClEnvironment(
    use_c_plus_plus_libs=True, nacl_platform=os.getenv('NACL_TARGET_PLATFORM'))

#nacl_env.Prepend(LIBS=['SDL'])
nacl_env.Prepend(LIBS=['SDL_mixer', 'SDL', 'mikmod', 'vorbisfile', 'vorbis', 'ogg'])

nacl_env.Append(CPPPATH=['include', 'main', 'arch/include', 'arch/nacl/physfs'])

PROGRAM_NAME = 'D1X-Rebirth'
# version number
D1XMAJOR = 0
D1XMINOR = 55
D1XSVN   = os.popen('git rev-parse HEAD | cut -c1-10').read()[:-1]
D1XSVN   = D1XSVN.split(':')[-1]

nacl_env.Append(CPPFLAGS = ['-Wall', '-funsigned-char', '-O2'])
nacl_env.Append(CPPDEFINES = [('PROGRAM_NAME', '\\"' + str(PROGRAM_NAME) + '\\"'), ('D1XMAJOR', '\\"' + str(D1XMAJOR) + '\\"'), ('D1XMINOR', '\\"' + str(D1XMINOR) + '\\"')])
nacl_env.Append(CPPDEFINES = ['USE_SDLMIXER'])
nacl_env.Append(CPPDEFINES = [('SHAREPATH', '\\"/usr/share\\"')])
#nacl_env.Append(CPPDEFINES = ['NETWORK', 'HAVE_NETIPX_IPX_H', '_REENTRANT'])
#nacl_env.Append(CPPPATH = ['include', 'main', 'arch/include'])


# general source files
common_sources = [
'2d/2dsline.c',
'2d/bitblt.c',
'2d/bitmap.c',
'2d/box.c',
'2d/canvas.c',
'2d/circle.c',
'2d/disc.c',
'2d/font.c',
'2d/gpixel.c',
'2d/line.c',
'2d/palette.c',
'2d/pcx.c',
'2d/pixel.c',
'2d/poly.c',
'2d/rect.c',
'2d/rle.c',
'2d/scalec.c',
'2d/tmerge.c',
'3d/clipper.c',
'3d/draw.c',
'3d/globvars.c',
'3d/instance.c',
'3d/interp.c',
'3d/matrix.c',
'3d/points.c',
'3d/rod.c',
'3d/setup.c',
'arch/sdl/event.c',
'arch/sdl/init.c',
'arch/sdl/joy.c',
'arch/sdl/key.c',
'arch/sdl/mouse.c',
'arch/sdl/rbaudio.c',
'arch/sdl/timer.c',
'arch/sdl/digi.c',
'arch/sdl/digi_audio.c',
'iff/iff.c',
'main/ai.c',
'main/aipath.c',
'main/automap.c',
'main/bm.c',
'main/bmread.c',
'main/cntrlcen.c',
'main/collide.c',
'main/config.c',
'main/console.c',
'main/controls.c',
'main/credits.c',
'main/custom.c',
'main/digiobj.c',
'main/dumpmine.c',
'main/effects.c',
'main/endlevel.c',
'main/fireball.c',
'main/fuelcen.c',
'main/fvi.c',
'main/game.c',
'main/gamefont.c',
'main/gamemine.c',
'main/gamesave.c',
'main/gameseg.c',
'main/gameseq.c',
'main/gauges.c',
'main/hash.c',
'main/hostage.c',
'main/hud.c',
'main/inferno.c',
'main/kconfig.c',
'main/kmatrix.c',
'main/laser.c',
'main/lighting.c',
'main/menu.c',
'main/mglobal.c',
'main/mission.c',
'main/morph.c',
'main/multi.c',
'main/multibot.c',
'main/multipow.c',
#'main/netdrv.c',
#'main/netdrv_udp.c',
#'main/netpkt.c',
'main/network.c',
'main/newdemo.c',
'main/newmenu.c',
'main/object.c',
'main/paging.c',
'main/physics.c',
'main/piggy.c',
'main/playsave.c',
'main/polyobj.c',
'main/powerup.c',
'main/render.c',
'main/robot.c',
'main/scores.c',
'main/slew.c',
'main/snddecom.c',
'main/songs.c',
'main/state.c',
'main/switch.c',
'main/terrain.c',
'main/texmerge.c',
'main/text.c',
'main/titles.c',
'main/vclip.c',
'main/wall.c',
'main/weapon.c',
'mem/mem.c',
'misc/args.c',
'misc/compare.c',
'misc/dl_list.c',
'misc/error.c',
'misc/ignorecase.c',
'misc/strio.c',
'misc/strutil.c',
'texmap/ntmap.c',
'texmap/scanline.c',
'physfs/physfs.c',
'physfs/posix.c',
'physfs/unix.c',
'physfs/physfs_byteorder.c',
'physfs/physfs_unicode.c',
'physfs/dir.c',
'physfs/hog.c'
#'tracker/client/tracker_client.c'
]

# for sdl
arch_sdl_sources = [
'arch/sdl/gr.c',
'texmap/tmapflat.c'
]

arch_sdlmixer_sources = [
'misc/hmp2mid.c',
'arch/sdl/digi_mixer.c',
'arch/sdl/digi_mixer_music.c', 
'arch/sdl/jukebox.c'
]

arch_oplmus = [
'arch/sdl/oplmus.c',
'arch/sdl/dbopl.cpp',
'arch/sdl/oplsnd.cpp',
'arch/sdl/loadfile.c',
'arch/sdl/hmpopl.c',
'arch/sdl/hmpfile.c'
]


noasm_sources = [
'maths/fixc.c',
'maths/rand.c',
'maths/tables.c',
'maths/vecmat.c'
]


sources = ['d1xnacl.cc', 'libcstubs.c', 'sdlmain.c', 'loaddata.cc']

sources += common_sources
sources += arch_sdl_sources
sources += noasm_sources
sources += arch_sdlmixer_sources
sources += arch_oplmus

sources += ['crash_dump/untrusted_crash_dump.c', 'crash_dump/string_stream.c']
nacl_env.Append(CPPDEFINES = ['NO_ASM'])

nacl_env.AllNaClModules(sources, 'd1xnacl')
